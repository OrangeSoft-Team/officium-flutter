// Mocks generated by Mockito 5.0.10 from annotations
// in officium_flutter/test/infraestructura/oferta_laboral/repositorios/oferta_laboral_repositorio_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:officium_flutter/dominio/comun/value_objects/identificador.dart'
    as _i7;
import 'package:officium_flutter/infraestructura/oferta_laboral/fuentes/i_oferta_laboral_fuente.dart'
    as _i4;
import 'package:officium_flutter/infraestructura/oferta_laboral/modelos/oferta_laboral_detalle_dto.dart'
    as _i2;
import 'package:officium_flutter/infraestructura/oferta_laboral/modelos/oferta_laboral_dto.dart'
    as _i6;
import 'package:officium_flutter/infraestructura/oferta_laboral/modelos/postulacion_oferta_laboral_dto.dart'
    as _i8;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeOfertaLaboralDetalleDTO extends _i1.Fake
    implements _i2.OfertaLaboralDetalleDTO {}

class _FakeUnit extends _i1.Fake implements _i3.Unit {
  @override
  String toString() => super.toString();
}

/// A class which mocks [IOfertaLaboralFuente].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOfertaLaboralFuente extends _i1.Mock
    implements _i4.IOfertaLaboralFuente {
  MockIOfertaLaboralFuente() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.OfertaLaboralDTO>> obtenerOfertasLaborales() =>
      (super.noSuchMethod(Invocation.method(#obtenerOfertasLaborales, []),
              returnValue: Future<List<_i6.OfertaLaboralDTO>>.value(
                  <_i6.OfertaLaboralDTO>[]))
          as _i5.Future<List<_i6.OfertaLaboralDTO>>);
  @override
  _i5.Future<_i2.OfertaLaboralDetalleDTO> obtenerDetalleOfertasLaboral(
          _i7.Identificador? uuidOfertaLaboral) =>
      (super.noSuchMethod(
          Invocation.method(#obtenerDetalleOfertasLaboral, [uuidOfertaLaboral]),
          returnValue: Future<_i2.OfertaLaboralDetalleDTO>.value(
              _FakeOfertaLaboralDetalleDTO())) as _i5
          .Future<_i2.OfertaLaboralDetalleDTO>);
  @override
  _i5.Future<_i3.Unit> aplicarOfertaLaboral(_i7.Identificador? uuidOferta,
          _i8.PostulacionOfertaLaboralDTO? postulacionOfertaLaboral) =>
      (super.noSuchMethod(
          Invocation.method(
              #aplicarOfertaLaboral, [uuidOferta, postulacionOfertaLaboral]),
          returnValue:
              Future<_i3.Unit>.value(_FakeUnit())) as _i5.Future<_i3.Unit>);
}
